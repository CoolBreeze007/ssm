一Spring知识点
1.Spring 概述:
Spring 是个java企业级应用的开源开发框架。Spring主要用来开发Java应用，但是有些扩展是针对构建J2EE平台的web应用。Spring 框架目标是简化Java企业级应用开发，并通过POJO为基础的编程模型促进良好的编程习惯。
2.使用Spring框架的好处:
轻量：Spring 是轻量的，基本的版本大约2MB。
控制反转：Spring通过控制反转实现了松散耦合，对象们给出它们的依赖，而不是创建或查找依赖的对象们。
面向切面的编程(AOP)：Spring支持面向切面的编程，并且把应用业务逻辑和系统服务分开，并使系统服务模块化。
容器：Spring 包含并管理应用中对象的生命周期和配置。
MVC框架：Spring的WEB框架是个精心设计的框架，是Web框架的一个很好的替代品。
事务管理：Spring 提供一个持续的事务管理接口，可以扩展到上至本地事务下至全局事务（JTA）。
异常处理：Spring 提供方便的API把具体技术相关的异常（比如由JDBC，Hibernate or JDO抛出的）转化为一致的unchecked 异常。

二Spring MVC知识点
概述:
Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将web层进行职责解耦，基于请求驱动指的就是使用请求-响应模型。Spring Web MVC前端控制器是DispatcherServlet；应用控制器其实拆为处理器映射器(Handler Mapping)进行处理器管理和视图解析器(View Resolver)进行视图管理；页面控制器/动作/处理器为Controller接口（仅包含ModelAndView handleRequest(request, response) 方法）的实现（也可以是任何的POJO类）；支持本地化（Locale）解析、主题（Theme）解析及文件上传等；提供了非常灵活的数据验证、格式化和数据绑定机制；提供了强大的约定大于配置（惯例优先原则）的契约式编程支持。
Spring MVC 工作流程:
1.用户向服务器发送请求，请求被Spring 前端控制Servelt DispatcherServlet捕获；
2.DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI）。然后根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain对象的形式返回；
3.DispatcherServlet 根据获得的Handler，选择一个合适的HandlerAdapter。（附注：如果成功获得HandlerAdapter后，此时将开始执行拦截器的preHandler(...)方法）
4.提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)。 在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：
    HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息
    数据转换：对请求消息进行数据转换。如String转换成Integer、Double等
    数据根式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等
    数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中
5.Handler执行完成后，向DispatcherServlet 返回一个ModelAndView对象；
6.根据返回的ModelAndView，选择一个适合的ViewResolver（必须是已经注册到Spring容器中的ViewResolver)返回给DispatcherServlet ；
7.ViewResolver 结合Model和View，来渲染视图
8.将渲染结果返回给客户端


三Mybatis概念:
什么是Mybatis？
MyBatis是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。

*Mybatis框架的运行原理
Mybatis框架内部封装了JDBC，只需关注sql语句本身，在学习MyBatis-Plus之后甚至不需要写sql语句。

通过XML或注解的方式将要执行的各种Statement配置，通过Java对象和sttement中sql动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为Java对象并返回

采用了ORM思想解决了实体和数据库映射问题，对JDBC进行封装，屏蔽了JDBC API底层访问细节。
ORM：Object Relational Mapping对象关系映射

就是把数据库表和实体类及其属性对应，实现操作实体类就操作数据库表。

Mybatis的优缺点
优点
与JDBC相比，减少了50%以上的代码量。

MyBatis是最简单的持久化框架，小巧并且简单易学。消除了JDBC大量冗余的代码，不需要手动开关连接

MyBatis灵活，不会对应用程序或者数据库的现有设计强加任何影响，SQL写在XML里，从程序代码中彻底分离，降低耦合度，便于统一管理和优化，可重用。

提供XML标签，支持编写动态SQL语句（XML中使用if, else）。

提供映射标签，支持对象与数据库的ORM字段关系映射（在XML中配置映射关系，也可以使用注解）。

缺点
SQL语句的编写工作量较大，尤其是字段多、关联表多时，更是如此，对开发人员编写SQL语句的功底有一定要求。

SQL语句依赖于数据库，导致数据库移植性差，不能随意更换数据库。
